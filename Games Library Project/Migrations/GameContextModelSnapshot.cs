// <auto-generated />
using Games_Library_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Games_Library_Project.Migrations
{
    [DbContext(typeof(GameContext))]
    partial class GameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Games_Library_Project.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Available")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            GenreId = "Pu",
                            Name = "Tetris",
                            PublisherId = 1,
                            Year = 1984
                        },
                        new
                        {
                            GameId = 2,
                            GenreId = "Ac",
                            Name = "Half-Life",
                            PublisherId = 2,
                            Year = 1998
                        },
                        new
                        {
                            GameId = 3,
                            GenreId = "Ad",
                            Name = "Unravel",
                            PublisherId = 3,
                            Year = 2016
                        },
                        new
                        {
                            GameId = 4,
                            GenreId = "Ac",
                            Name = "CS:GO",
                            PublisherId = 2,
                            Year = 2012
                        });
                });

            modelBuilder.Entity("Games_Library_Project.Models.Genre", b =>
                {
                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            GenreId = "Ac",
                            Name = "Action"
                        },
                        new
                        {
                            GenreId = "Ad",
                            Name = "Adventure"
                        },
                        new
                        {
                            GenreId = "Pu",
                            Name = "Puzzle"
                        });
                });

            modelBuilder.Entity("Games_Library_Project.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PublisherId");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            PublisherId = 1,
                            Name = "Microsoft",
                            Year = 1983
                        },
                        new
                        {
                            PublisherId = 2,
                            Name = "Valve",
                            Year = 1996
                        },
                        new
                        {
                            PublisherId = 3,
                            Name = "EA",
                            Year = 1983
                        });
                });

            modelBuilder.Entity("Games_Library_Project.Models.Game", b =>
                {
                    b.HasOne("Games_Library_Project.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Games_Library_Project.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Publisher");
                });
#pragma warning restore 612, 618
        }
    }
}
